import { generateId } from '@shared/libs'

import type { QuestionItem } from '../model'

const labelPrefix = 'test.step2.questions.question'
const choiceOptionsPrefix = 'test.choiceOptions.'

const createBaseOptions = (yes = 2, partial = 1, no = 0) => [
  { label: `${choiceOptionsPrefix}yes`, weight: yes },
  { label: `${choiceOptionsPrefix}partial`, weight: partial },
  { label: `${choiceOptionsPrefix}no`, weight: no },
]

export const Questions_STEP_2: QuestionItem[] = [
  {
    id: generateId(),
    text: `${labelPrefix}1`,
    problemType: 'ethicalStandards',
    type: 'choice',
    options: createBaseOptions(1, 2, 0),
  },
  {
    id: generateId(),
    text: `${labelPrefix}2`,
    weight: 0,
    problemType: 'ethicalStandards',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}3`,
    problemType: 'ethicalStandards',
    type: 'choice',
    options: createBaseOptions(1, 2, 0),
  },
  {
    id: generateId(),
    text: `${labelPrefix}4`,
    problemType: 'ethicalStandards',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}5`,
    problemType: 'ethicalStandards',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}6`,
    problemType: 'ethicalStandards',
    type: 'choice',
    options: createBaseOptions(1, 2, 0),
  },
  {
    id: generateId(),
    text: `${labelPrefix}7`,
    problemType: 'ethicalStandards',
    type: 'choice',
    options: createBaseOptions(1, 2, 0),
  },
  {
    id: generateId(),
    text: `${labelPrefix}8`,
    problemType: 'ethicalStandards',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}9`,
    problemType: 'ethicalStandards',
    type: 'choice',
    options: createBaseOptions(1, 2, 0),
  },
  {
    id: generateId(),
    text: `${labelPrefix}10`,
    problemType: 'ethicalStandards',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}11`,
    problemType: 'appearance',
    type: 'choice',
    options: createBaseOptions(1, 2, 0),
  },
  {
    id: generateId(),
    text: `${labelPrefix}12`,
    problemType: 'appearance',
    type: 'choice',
    options: createBaseOptions(1, 2, 0),
  },
  {
    id: generateId(),
    text: `${labelPrefix}13`,
    problemType: 'appearance',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}14`,
    problemType: 'appearance',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}15`,
    problemType: 'appearance',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}16`,
    problemType: 'appearance',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}17`,
    problemType: 'appearance',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}18`,
    problemType: 'appearance',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}19`,
    problemType: 'appearance',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}20`,
    problemType: 'appearance',
    type: 'choice',
    options: createBaseOptions(0, 1, 2),
  },
  {
    id: generateId(),
    text: `${labelPrefix}21`,
    problemType: 'manners',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}22`,
    problemType: 'manners',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}23`,
    problemType: 'manners',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}24`,
    problemType: 'manners',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}25`,
    problemType: 'manners',
    type: 'choice',
    options: createBaseOptions(1, 2, 0),
  },
  {
    id: generateId(),
    text: `${labelPrefix}26`,
    problemType: 'manners',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}27`,
    problemType: 'manners',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}28`,
    problemType: 'manners',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}29`,
    problemType: 'manners',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}30`,
    problemType: 'manners',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}31`,
    problemType: 'communication',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}32`,
    problemType: 'communication',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}33`,
    problemType: 'communication',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}34`,
    problemType: 'communication',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}35`,
    problemType: 'communication',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}36`,
    problemType: 'communication',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}37`,
    problemType: 'communication',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}38`,
    problemType: 'communication',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}39`,
    problemType: 'communication',
    type: 'choice',
    options: createBaseOptions(),
  },
  {
    id: generateId(),
    text: `${labelPrefix}40`,
    problemType: 'communication',
    type: 'choice',
    options: createBaseOptions(),
  },
]
